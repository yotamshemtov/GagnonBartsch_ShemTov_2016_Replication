
R version 3.3.3 RC (2017-02-27 r72279) -- "Another Canoe"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ########################################################
> # Layell (2009) data application
> # Date: March 19, 2017
> #
> ########################################################
> 
> rm(list=ls())
> 
> # Libraries
> library(ggplot2)
> library(cpt.paper)
> library(cpt)
> library(xtable)
> 
> ########################################
> # Load data and data descriptives
> ########################################
> 
> data("cpt.violence")
> 
> cov = c("lpop2000","poverty","tariq","lelev","iso",
+         "lnn","garrison","reb")
> # checks:
> stopifnot( sum( ! cpt.violence$rawdata[, cov] == cpt.violence$Z) == 0 )
> 
> # These covariates have been chosen to illustrate a scenario in which the CPT can detect imbalance in observed characteristics 
> # that is not observed by either looking on the marginal distributions or by conducting a standard F-test.
> 
> ### Descriptives
> 
> #### Balance in each covariate
> 
> f.stat = function(x1,x0){
+   #sd.bias = summary(x1-x0)[4]/sd(c(x1,x0),na.rm=T)
+   ks = ks.test(x1,x0)$p.value
+   ttest = t.test(x1,x0)$p.value
+   wilcox = wilcox.test(x1,x0)$p.value
+   return(c(mean(x1,na.rm=T),mean(x0,na.rm=T),ttest,wilcox,ks))
+ }
> 
> tab = t(mapply(f.stat,as.list(data.frame(cpt.violence$Z[cpt.violence$T=="1",])),as.list(data.frame(cpt.violence$Z[cpt.violence$T=="0",]))))
Warning messages:
1: In ks.test(x1, x0) :
  p-value will be approximate in the presence of ties
2: In ks.test(x1, x0) :
  p-value will be approximate in the presence of ties
3: In ks.test(x1, x0) :
  p-value will be approximate in the presence of ties
4: In ks.test(x1, x0) :
  p-value will be approximate in the presence of ties
5: In ks.test(x1, x0) :
  p-value will be approximate in the presence of ties
6: In ks.test(x1, x0) :
  p-value will be approximate in the presence of ties
7: In ks.test(x1, x0) :
  p-value will be approximate in the presence of ties
8: In ks.test(x1, x0) :
  p-value will be approximate in the presence of ties
> tab = round(tab,dig=3)
> colnames(tab) = c("Ave. Treat","Ave. control","T-test","Wilcoxon","KS")
> rownames(tab) = c("log-Population","Poverty","Tariqa","log-Elevation","Isolation","log distance to Neighbor","Garrison","Rebel")
> xtable(tab,caption="Balance table", dig=3)
% latex table generated in R 3.3.3 by xtable 1.8-2 package
% Sun Mar 19 17:12:10 2017
\begin{table}[ht]
\centering
\begin{tabular}{rrrrrr}
  \hline
 & Ave. Treat & Ave. control & T-test & Wilcoxon & KS \\ 
  \hline
log-Population & 7.830 & 7.759 & 0.699 & 0.952 & 0.569 \\ 
  Poverty & 2.321 & 2.239 & 0.245 & 0.301 & 0.988 \\ 
  Tariqa & 0.050 & 0.057 & 0.804 & 0.805 & 1.000 \\ 
  log-Elevation & 5.834 & 5.766 & 0.424 & 0.651 & 0.260 \\ 
  Isolation & 3.767 & 3.836 & 0.802 & 0.656 & 0.569 \\ 
  log distance to Neighbor & 0.896 & 0.882 & 0.854 & 0.839 & 0.569 \\ 
  Garrison & 0.258 & 0.283 & 0.615 & 0.615 & 1.000 \\ 
  Rebel & 0.585 & 0.522 & 0.261 & 0.260 & 0.912 \\ 
   \hline
\end{tabular}
\caption{Balance table} 
\end{table}
> 
> # F-test
> 
> dp = as.data.frame(cpt.violence$Z)
> dp$T = cpt.violence$T=="1"
> 
> ols1=lm(T~(.),data=dp)
> summary(ols1)

Call:
lm(formula = T ~ (.), data = dp)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.58930 -0.49776  0.05226  0.47919  0.66623 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)
(Intercept) -0.056809   0.425187  -0.134    0.894
lpop2000     0.033022   0.025964   1.272    0.204
poverty      0.083635   0.081512   1.026    0.306
tariq        0.013606   0.131436   0.104    0.918
lelev        0.015767   0.067692   0.233    0.816
iso         -0.003285   0.016413  -0.200    0.841
lnn          0.023265   0.051962   0.448    0.655
garrison    -0.048342   0.081765  -0.591    0.555
reb          0.038764   0.064606   0.600    0.549

Residual standard error: 0.5036 on 309 degrees of freedom
Multiple R-squared:  0.01439,	Adjusted R-squared:  -0.01112 
F-statistic: 0.5641 on 8 and 309 DF,  p-value: 0.8071

> 
> ########################################
> # Estimation
> ########################################
> 
> violence.analysis = cpt(
+   Z = cpt.violence$Z,
+   T = cpt.violence$T,
+   class.methods = "forest",
+   metric = "rate",
+   perm.N = 1000
+ )
> 
> violence.analysis2 = cpt(
+   Z = cpt.violence$Z,
+   T = cpt.violence$T,
+   class.methods = "logistic2",
+   metric = "rate",
+   perm.N = 1000
+ )
> 
> ########################################
> # Figures Lyall (violance example)
> ########################################
> 
> range = c(
+   min(violence.analysis$nulldist, violence.analysis$teststat, 
+       violence.analysis2$nulldist, violence.analysis2$teststat),
+   max(violence.analysis$nulldist, violence.analysis$teststat, 
+       violence.analysis2$nulldist, violence.analysis2$teststat)
+           )
> 
> ### Random Forest
> 
> teststat.obs <- violence.analysis$teststat 
> teststat.null <- violence.analysis$nulldist
> 
> fig<-ggplot(data.frame(statistic.null=teststat.null),aes(x=statistic.null))+
+   xlim(range)+
+   ylim(0,250)+
+   geom_histogram(
+     fill="grey",
+     breaks=seq(range[1],range[2],length=40)
+   )+
+   labs(
+     title="Classifier: Random forest \n",
+     x="\n Test statistic under the null",
+     y="\n Frequency"
+   )+
+   theme_bw()+
+   theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank() )+
+   theme(panel.border = element_blank(), 
+         axis.line.x = element_line(colour = "black"),
+         axis.line.y = element_line(colour = "black"),
+         axis.text = element_text(size = 12),
+         axis.title = element_text(size = 12),
+         axis.text = element_text(size = 12),
+         axis.title = element_text(size = 12)
+   )+
+   geom_vline(xintercept=teststat.obs,lty=1,col="black",size=1)+
+   annotate("text", x = .7, y = 250, label = "Observed test statistic",col="black", size = 5)
> ggsave(fig, file = "lyall-forest.pdf", width = 5, height=4)
> 
> ### Logistic with interactions
> 
> teststat.obs <- violence.analysis2$teststat 
> teststat.null <- violence.analysis2$nulldist
> 
> fig<-ggplot(data.frame(statistic.null=teststat.null),aes(x=statistic.null))+
+   xlim(range)+
+   ylim(0,250)+
+   geom_histogram(
+     fill="grey",
+     breaks=seq(range[1],range[2],length=40)
+   )+
+   labs(
+     title="Classifier: Logistic regression with interactions \n",
+     x="\n Test statistic under the null",
+     y="\n Frequency"
+   )+
+   theme_bw()+
+   theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank() )+
+   theme(panel.border = element_blank(), 
+         axis.line.x = element_line(colour = "black"),
+         axis.line.y = element_line(colour = "black"),
+         axis.text = element_text(size = 12),
+         axis.title = element_text(size = 12),
+         axis.text = element_text(size = 12),
+         axis.title = element_text(size = 12)
+   )+
+   geom_vline(xintercept=teststat.obs,lty=1,col="black",size=1)+
+   annotate("text", x = .7, y = 250, label = "Observed test statistic",col="black", size=5)
> 
> ggsave(fig, file = "lyall-log2.pdf", width = 5, height=4)
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
207.888   0.948 208.559 
